{"ast":null,"code":"export default {\n  name: \"Demo02Test\",\n\n  data() {\n    return {\n      arr: [5, 3, 9, 2, 1],\n      count: 1\n    };\n  },\n\n  methods: {\n    btn() {\n      this.arr.reverse();\n    },\n\n    btn1() {\n      this.arr.slice(0, 3); // console.log(this.arr.slice(0, 3));\n      // console.log(this.arr);\n      // slice 不会改变原数组\n      // 解决方案\n      // 1.直接重新赋值\n      // this.arr = this.arr.slice(0, 3);\n      // 2. splice(开始的位置， 删除的长度，替换元素)\n\n      this.arr.splice(0, 3); // 是会改变原组数\n      // 只要 可以 改变原组数 就会触发视图更新\n    },\n\n    btn2() {\n      this.arr[0] = 1000; // console.log(this.arr);\n      // vm.$set(target, propertyName/index, value)\n      // target 目标对象\n      // propertyName/index 属性/索引号\n      // value\n\n      this.$set(this.arr, 0, 1000);\n      console.log(this);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAeA;EACAA,kBADA;;EAEAC;IACA;MACAC,oBADA;MAEAC;IAFA;EAIA,CAPA;;EAQAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA,qBADA,CAEA;MACA;MACA;MACA;MACA;MACA;MACA;;MACA,sBATA,CASA;MACA;IACA,CAfA;;IAgBAC;MACA,mBADA,CAEA;MACA;MACA;MACA;MACA;;MACA;MACAC;IACA;;EAzBA;AARA","names":["name","data","arr","count","methods","btn","btn1","btn2","console"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div>\n    <ul>\n      <li v-for=\"(val, index) in arr\" :key=\"index\">\n        {{ val }}\n      </li>\n    </ul>\n    <p>{{count}}</p>\n    <button @click=\"btn\">数组翻转</button>\n    <button @click=\"btn1\">截取前3个</button>\n    <button @click=\"btn2\">更新第一个元素值</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Demo02Test\",\n  data() {\n    return {\n      arr: [5, 3, 9, 2, 1],\n      count:1\n    };\n  },\n  methods: {\n    btn() {\n      this.arr.reverse();\n    },\n    btn1() {\n      this.arr.slice(0, 3);\n      // console.log(this.arr.slice(0, 3));\n      // console.log(this.arr);\n      // slice 不会改变原数组\n      // 解决方案\n      // 1.直接重新赋值\n      // this.arr = this.arr.slice(0, 3);\n      // 2. splice(开始的位置， 删除的长度，替换元素)\n      this.arr.splice(0, 3); // 是会改变原组数\n      // 只要 可以 改变原组数 就会触发视图更新\n    },\n    btn2() {\n      this.arr[0] = 1000;\n      // console.log(this.arr);\n      // vm.$set(target, propertyName/index, value)\n      // target 目标对象\n      // propertyName/index 属性/索引号\n      // value\n      this.$set(this.arr, 0, 1000);\n      console.log(this);\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}