{"ast":null,"code":"export default {\n  name: \"Demo03Set\",\n\n  data() {\n    return {\n      msg: 1,\n      // 响应式的数据：数据变化，会同步到视图的上数据\n      // 在data上现定义\n      obj: {\n        age: 18\n      },\n      arr: [1, 2],\n      arr2: [{\n        a: 1\n      }]\n    };\n  },\n\n  mounted() {},\n\n  methods: {\n    btn() {\n      // this.msg++;\n      // this.obj.count = 1; // count 不是响应式的数据\n      // console.log(this.obj);\n      // this.obj.age++;\n      // console.log(this);\n      this.$set(this.obj, \"count\", 100);\n      console.log(this);\n    },\n\n    btn1() {\n      // this.arr[0] = 1000;\n      this.$set(this.arr, 0, 100); // 只能使得当前的这一次有效\n\n      console.log(this);\n    },\n\n    btn2() {\n      this.arr[0] = 1000;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAuBA;EACAA,iBADA;;EAEAC;IACA;MACAC,MADA;MACA;MACA;MACAC;QACAC;MADA,CAHA;MAMAC,WANA;MAOAC;QAAAC;MAAA;IAPA;EASA,CAZA;;EAaAC,YAbA;;EAcAC;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;MACAC;IACA,CATA;;IAUAC;MACA;MACA,4BAFA,CAEA;;MACAD;IACA,CAdA;;IAeAE;MACA;IACA;;EAjBA;AAdA","names":["name","data","msg","obj","age","arr","arr2","a","mounted","methods","btn","console","btn1","btn2"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- <h1>{{ msg }}</h1> -->\n    <h1>{{ obj.count }}</h1>\n    <!-- <h1>{{ obj.age }}</h1> -->\n    <button @click=\"btn\">点击变化</button>\n    <h1>{{ arr[0] }}</h1>\n    <button @click=\"btn1\">第一次改变数组</button>\n    <button @click=\"btn2\">第二次改变数组</button>\n\n    <!-- \n      Vue.set(target, propertyName/index, value)\n      或\n      vm.$set(target, propertyName/index, value)\n\n    作用：向响应式对象中添加一个 属性，并确保这个新 属性\n    同样是响应式的，且触发视图更新 \n    \n    target: 不能是 Vue 实例，或者 Vue 实例的根数据对象-->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Demo03Set\",\n  data() {\n    return {\n      msg: 1, // 响应式的数据：数据变化，会同步到视图的上数据\n      // 在data上现定义\n      obj: {\n        age: 18,\n      },\n      arr: [1, 2],\n      arr2: [{ a: 1 }],\n    };\n  },\n  mounted() {},\n  methods: {\n    btn() {\n      // this.msg++;\n      // this.obj.count = 1; // count 不是响应式的数据\n      // console.log(this.obj);\n      // this.obj.age++;\n      // console.log(this);\n      this.$set(this.obj, \"count\", 100);\n      console.log(this);\n    },\n    btn1() {\n      // this.arr[0] = 1000;\n      this.$set(this.arr, 0, 100); // 只能使得当前的这一次有效\n      console.log(this);\n    },\n    btn2() {\n      this.arr[0] = 1000;\n    },\n  },\n};\n</script>\n\n<style scoped></style>"]},"metadata":{},"sourceType":"module"}